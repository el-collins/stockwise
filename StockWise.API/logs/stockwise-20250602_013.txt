2025-06-02 01:04:23.189 +01:00 [INF] Database initialized successfully
2025-06-02 01:04:23.223 +01:00 [INF] StockWise API starting up...
2025-06-02 01:04:23.248 +01:00 [INF] Low Stock Monitoring Service started
2025-06-02 01:04:23.432 +01:00 [ERR] Error occurred in Low Stock Monitoring Service
RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> RabbitMQ.Client.Exceptions.OperationInterruptedException: The AMQP operation was interrupted: AMQP close-reason, initiated by Peer, code=530, text='NOT_ALLOWED - vhost /stockwise not found', classId=10, methodId=40
   at RabbitMQ.Client.Impl.SimpleBlockingRpcContinuation.GetReply(TimeSpan timeout)
   at RabbitMQ.Client.Impl.ModelBase.ConnectionOpen(String virtualHost, String capabilities, Boolean insist)
   at RabbitMQ.Client.Framing.Impl.Connection.Open(Boolean insist)
   at RabbitMQ.Client.Framing.Impl.Connection..ctor(IConnectionFactory factory, Boolean insist, IFrameHandler frameHandler, String clientProvidedName)
   at RabbitMQ.Client.Framing.Impl.Connection..ctor(IConnectionFactory factory, Boolean insist, IFrameHandler frameHandler, ArrayPool`1 memoryPool, String clientProvidedName)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IFrameHandler fh)
   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection()
   at StockWise.API.Services.MessageService..ctor(IConnectionFactory connectionFactory, ILogger`1 logger) in C:\Users\elcol\source\repos\StockWise\StockWise.API\Services\MessageService.cs:line 16
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at StockWise.API.BackgroundServices.LowStockMonitoringService.CheckLowStockProducts() in C:\Users\elcol\source\repos\StockWise\StockWise.API\Services\LowStockMonitoringService.cs:line 46
   at StockWise.API.BackgroundServices.LowStockMonitoringService.ExecuteAsync(CancellationToken stoppingToken) in C:\Users\elcol\source\repos\StockWise\StockWise.API\Services\LowStockMonitoringService.cs:line 27
2025-06-02 01:05:50.682 +01:00 [INF] Low Stock Monitoring Service is stopping...
[2025-06-02 01:06:06.450 +01:00 INF] Database initialized successfully <s:>
[2025-06-02 01:06:06.517 +01:00 INF] StockWise API starting up... <s:>
[2025-06-02 01:06:06.575 +01:00 INF] Low Stock Monitoring Service started <s:StockWise.API.BackgroundServices.LowStockMonitoringService>
[2025-06-02 01:06:07.431 +01:00 INF] Found 1 low stock products <s:StockWise.API.Services.ProductService>
[2025-06-02 01:06:07.475 +01:00 INF] Published message to alert.events/stock.low: {"ProductId":3,"ProductName":"Mechanical Keyboard","CurrentStock":5,"Threshold":10,"Timestamp":"2025-06-02T00:06:07.4491237Z"} <s:StockWise.API.Services.MessageService>
[2025-06-02 01:06:07.504 +01:00 WRN] Low stock alert sent for product: Mechanical Keyboard (ID: 3), Current Stock: 5, Threshold: 10 <s:StockWise.API.BackgroundServices.LowStockMonitoringService>
[2025-06-02 01:06:07.505 +01:00 INF] Processed 1 low stock alerts <s:StockWise.API.BackgroundServices.LowStockMonitoringService>
[2025-06-02 01:06:15.699 +01:00 WRN] Failed to determine the https port for redirect. <s:Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware>
[2025-06-02 01:06:15.843 +01:00 INF] JWT Token validated successfully for user: Collins <s:>
[2025-06-02 01:06:15.843 +01:00 INF] JWT Token validated successfully for user: Collins <s:>
[2025-06-02 01:06:16.013 +01:00 INF] Cached value for key: products:all <s:StockWise.API.Services.CacheService>
[2025-06-02 01:06:16.015 +01:00 INF] Retrieved 3 products from database <s:StockWise.API.Services.ProductService>
[2025-06-02 01:08:02.764 +01:00 INF] JWT Token validated successfully for user: Collins <s:>
[2025-06-02 01:08:02.789 +01:00 INF] Found 1 low stock products <s:StockWise.API.Services.ProductService>
[2025-06-02 01:09:09.456 +01:00 WRN] JWT Challenge: null <s:>
[2025-06-02 01:09:19.227 +01:00 WRN] JWT Challenge: null <s:>
[2025-06-02 01:09:27.735 +01:00 INF] JWT Token validated successfully for user: Collins <s:>
[2025-06-02 01:09:27.736 +01:00 INF] JWT Token validated successfully for user: Collins <s:>
[2025-06-02 01:09:27.739 +01:00 INF] JWT Token validated successfully for user: Collins <s:>
[2025-06-02 01:09:27.747 +01:00 INF] Retrieved products from cache <s:StockWise.API.Services.ProductService>
[2025-06-02 01:09:28.346 +01:00 INF] Found 1 low stock products <s:StockWise.API.Services.ProductService>
[2025-06-02 01:10:05.718 +01:00 INF] JWT Token validated successfully for user: Collins <s:>
[2025-06-02 01:10:06.886 +01:00 INF] Published message to stock.events/stock.updated: {"ProductId":2,"OldQuantity":100,"NewQuantity":99,"Timestamp":"2025-06-02T00:10:06.8854233Z"} <s:StockWise.API.Services.MessageService>
[2025-06-02 01:10:07.102 +01:00 INF] Published message to order.events/order.placed: {"OrderId":1,"OrderNumber":"ORD-20250602-E3A58D91","TotalAmount":29.99,"Timestamp":"2025-06-02T00:10:07.1005519Z"} <s:StockWise.API.Services.MessageService>
[2025-06-02 01:10:07.102 +01:00 INF] Created order ORD-20250602-E3A58D91 with total amount 29.99 <s:StockWise.API.Services.OrderService>
[2025-06-02 01:10:07.265 +01:00 INF] JWT Token validated successfully for user: Collins <s:>
[2025-06-02 01:10:07.267 +01:00 INF] JWT Token validated successfully for user: Collins <s:>
[2025-06-02 01:10:07.269 +01:00 INF] Retrieved products from cache <s:StockWise.API.Services.ProductService>
[2025-06-02 01:10:29.732 +01:00 INF] JWT Token validated successfully for user: Collins <s:>
[2025-06-02 01:10:29.755 +01:00 INF] Found 1 low stock products <s:StockWise.API.Services.ProductService>
